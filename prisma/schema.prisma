// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model account {
  id_account              Int      @id @default(autoincrement())
  id_role                 Int
  status_account          Boolean
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  Role                    role     @relation(fields: [id_role], references: [id_role])

  Mahasiswa               mahasiswa[]
  Umum                    umum[]
  Dosen                   dosen[]
  Pemesanan               pemesanan[]
}

model mahasiswa {
  id                      Int      @id @default(autoincrement())
  id_account              Int
  nama                    String
  npm                     String   @unique
  email                   String   @unique
  password                String
  id_tahun_ajaran         Int
  id_fakultas             Int
  id_prodi                Int
  no_telp                 String
  bukti_identitas         String
  status                  Boolean
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  Prodi                   prodi    @relation(fields: [id_prodi], references: [id_prodi])
  tahun_ajaran            tahun_ajaran @relation(fields: [id_tahun_ajaran], references: [id_tahun_ajaran])
  Fakultas                fakultas @relation(fields: [id_fakultas], references: [id_fakultas])
  Account                 account  @relation(fields: [id_account], references: [id_account])
}

model umum {
  id                     Int      @id @default(autoincrement())
  id_account             Int
  NIK                    String   @unique
  nama                   String
  no_telp                String
  email                  String   @unique
  password               String
  bukti_identitas        String
  status                 Boolean

  Account                account  @relation(fields: [id_account], references: [id_account])
}

model dosen {
  id                     Int      @id @default(autoincrement())
  id_account             Int      @unique
  NIP                    String   @unique
  nama                   String
  no_telp                String
  email                  String   @unique
  password               String
  bukti_identitas        String
  status                 Boolean

  Account                account  @relation(fields: [id_account], references: [id_account])
}

model fakultas {
  id_fakultas             Int      @id @default(autoincrement())
  nama_fakultas           String

  Prodi                   prodi[]
  Mahasiswa               mahasiswa[]
}

model prodi {
  id_prodi                Int      @id @default(autoincrement())
  nama_prodi              String
  id_fakultas             Int

  Fakultas                fakultas @relation(fields: [id_fakultas], references: [id_fakultas])

  Mahasiswa               mahasiswa[]
}

model tahun_ajaran {
  id_tahun_ajaran         Int      @id @default(autoincrement())
  tahun_ajaran            String

  Mahasiswa               mahasiswa[]
}

model role {
  id_role                 Int      @id @default(autoincrement())
  nama_role               String

  account                 account[]
}

model admin {
  id_admin                Int      @id @default(autoincrement())
  username_admin          String
  password_admin          String
}

model fasilitas {
  id_fasilitas            Int      @id @default(autoincrement())
  nama                    String
  alamat                  String
  deskripsi               String
  foto                    String
  jam_buka                String
  jam_tutup               String
  buka_hari               String
  durasi                  Int
  no_va                   String 

  Harga                   harga[]
  Pemesanan               pemesanan[]
}

model harga {
  id                      Int     @id @default(autoincrement())
  id_fasilitas            Int
  nama                    String
  harga                   Int

  Fasilitas               fasilitas @relation(fields: [id_fasilitas], references: [id_fasilitas])
  kamar_asrama            kamar_asrama[]
  Pemesanan               pemesanan[]
}

model kamar_asrama {
  id_asrama               Int      @id @default(autoincrement())
  id                      Int
  no_kamar                Int
  npm_bed1_a              String?
  npm_bed2_b              String?
  npm_bed3_c              String?
  status_kamar            Boolean

  Harga                   harga    @relation(fields: [id], references: [id])
}

model pemesanan {
  id_pemesanan            Int      @id @default(autoincrement())
  id_fasilitas            Int
  id_harga                Int
  id_account              Int
  tanggal_pemesanan       DateTime
  jam_checkin             String?
  jam_checkout            String?
  durasi                  Int?
  total_harga             Int
  status                  String
  keterangan              String
  SIK                     String?
  bukti_pembayaran        String?
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  Account                 account  @relation(fields: [id_account], references: [id_account])
  Fasilitas               fasilitas @relation(fields: [id_fasilitas], references: [id_fasilitas])
  Harga                   harga     @relation(fields: [id_harga], references: [id])
}